{
  "openapi": "3.0.3",
  "info": {
    "title": "Enzo API",
    "description": "OpenAPI compliant REST API built using tRPC with Next.js",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://app.enzo.health/api"
    }
  ],
  "externalDocs": {
    "url": "https://docs.enzo.health/api"
  },
  "paths": {
    "/v1/workflows/{workflowId}/linkedWorkflows": {
      "get": {
        "operationId": "getLinkedWorkflows",
        "summary": "Get linked workflows",
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string",
                            "default": "1"
                          },
                          "groups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "title": {
                                  "type": "string"
                                },
                                "graphCoordinates": {
                                  "type": "object",
                                  "properties": {
                                    "x": {
                                      "type": "number"
                                    },
                                    "y": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "x",
                                    "y"
                                  ]
                                },
                                "blocks": {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/block"
                                  }
                                }
                              },
                              "required": [
                                "id",
                                "title",
                                "graphCoordinates",
                                "blocks"
                              ]
                            }
                          },
                          "variables": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "groupId": {
                                  "type": "string"
                                },
                                "isSessionVariable": {
                                  "type": "boolean"
                                },
                                "value": {
                                  "nullable": true,
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "version",
                          "groups",
                          "variables",
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "workflows"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflowRuns/{publicId}/start": {
      "post": {
        "operationId": "workflow-startWorkflowRun",
        "summary": "Start workflow run",
        "parameters": [
          {
            "in": "path",
            "name": "publicId",
            "description": "[Where to find my workflow's public ID?](../how-to#how-to-find-my-publicid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workflow's public ID?](../how-to#how-to-find-my-publicid)"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prefilledVariables": {
                    "type": "object",
                    "additionalProperties": {},
                    "example": {
                      "Input File": "https://example.com/file.txt"
                    }
                  },
                  "workflowExecutionId": {
                    "type": "string",
                    "description": "Provide it if you'd like to overwrite an existing result."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionId": {
                      "type": "string",
                      "description": "To save and use for /continue requests."
                    },
                    "workflowExecutionId": {
                      "type": "string"
                    },
                    "workflow": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "details": {}
                        },
                        "required": [
                          "status",
                          "description"
                        ]
                      },
                      "description": "Logs that were saved during the last execution"
                    },
                    "progress": {
                      "type": "number",
                      "description": "If enabled, this field will return a number between 0 and 100 indicating the current progress based on the longest remaining path of the workflow run."
                    },
                    "event": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "payload": {}
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "sessionId",
                    "workflow"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflowRuns/{workflowId}/preview/start": {
      "post": {
        "operationId": "workflow-startWorkflowRunPreview",
        "summary": "Start preview workflow run",
        "description": "Use this endpoint to test your workflow.",
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workflow": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/workflowV1"
                      },
                      {
                        "description": "If set, it will override the workflow that is used to start the workflow run."
                      }
                    ]
                  },
                  "startFrom": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "group"
                            ]
                          },
                          "groupId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "groupId"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "event"
                            ]
                          },
                          "eventId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "eventId"
                        ]
                      }
                    ]
                  },
                  "prefilledVariables": {
                    "type": "object",
                    "additionalProperties": {},
                    "description": "[More info about prefilled variables.](../../editor/variables#prefilled-variables)",
                    "example": {
                      "First name": "John",
                      "Email": "john@gmail.com"
                    }
                  },
                  "sessionId": {
                    "type": "string",
                    "description": "If provided, will be used as the session ID and will overwrite any existing session with the same ID."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sessionId": {
                      "type": "string",
                      "description": "To save and use for /continue requests."
                    },
                    "workflowExecutionId": {
                      "type": "string"
                    },
                    "workflow": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "details": {}
                        },
                        "required": [
                          "status",
                          "description"
                        ]
                      },
                      "description": "Logs that were saved during the last execution"
                    },
                    "progress": {
                      "type": "number",
                      "description": "If enabled, this field will return a number between 0 and 100 indicating the current progress based on the longest remaining path of the workflow run."
                    },
                    "event": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "sessionId",
                    "workflow",
                    "event"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows": {
      "post": {
        "operationId": "workflow-createWorkflow",
        "summary": "Create a workflow",
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationId": {
                    "type": "string"
                  },
                  "workflow": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "icon": {
                        "type": "string",
                        "nullable": true
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "graphCoordinates": {
                              "type": "object",
                              "properties": {
                                "x": {
                                  "type": "number"
                                },
                                "y": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "x",
                                "y"
                              ]
                            },
                            "blocks": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/block"
                              }
                            }
                          },
                          "required": [
                            "id",
                            "title",
                            "graphCoordinates",
                            "blocks"
                          ]
                        }
                      },
                      "events": {
                        "type": "array",
                        "maxItems": 1,
                        "minItems": 1,
                        "items": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/event"
                            }
                          ]
                        }
                      },
                      "folderId": {
                        "type": "string",
                        "nullable": true
                      },
                      "variables": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "groupId": {
                              "type": "string"
                            },
                            "isSessionVariable": {
                              "type": "boolean"
                            },
                            "value": {
                              "nullable": true,
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      },
                      "edges": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "from": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "blockId": {
                                      "type": "string"
                                    },
                                    "itemId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "blockId"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "eventId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "eventId"
                                  ]
                                }
                              ]
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "groupId": {
                                  "type": "string"
                                },
                                "blockId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "groupId"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "from",
                            "to"
                          ]
                        }
                      },
                      "resultsTablePreferences": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "columnsOrder": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "columnsVisibility": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "boolean"
                            }
                          },
                          "columnsWidth": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "number"
                            }
                          }
                        },
                        "required": [
                          "columnsOrder",
                          "columnsVisibility",
                          "columnsWidth"
                        ]
                      },
                      "publicId": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "required": [
                  "organizationId",
                  "workflow"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflow": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "default": "1"
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "graphCoordinates": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "number"
                                  },
                                  "y": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "x",
                                  "y"
                                ]
                              },
                              "blocks": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/block"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "title",
                              "graphCoordinates",
                              "blocks"
                            ]
                          }
                        },
                        "events": {
                          "type": "array",
                          "maxItems": 1,
                          "minItems": 1,
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/event"
                              }
                            ]
                          }
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "icon": {
                          "type": "string",
                          "nullable": true
                        },
                        "edges": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "from": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "blockId": {
                                        "type": "string"
                                      },
                                      "itemId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "blockId"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "eventId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "eventId"
                                    ]
                                  }
                                ]
                              },
                              "to": {
                                "type": "object",
                                "properties": {
                                  "groupId": {
                                    "type": "string"
                                  },
                                  "blockId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "groupId"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "from",
                              "to"
                            ]
                          }
                        },
                        "variables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "groupId": {
                                "type": "string"
                              },
                              "isSessionVariable": {
                                "type": "boolean"
                              },
                              "value": {
                                "nullable": true,
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "folderId": {
                          "type": "string",
                          "nullable": true
                        },
                        "publicId": {
                          "type": "string",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "resultsTablePreferences": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "columnsOrder": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "columnsVisibility": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "boolean"
                              }
                            },
                            "columnsWidth": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number"
                              }
                            }
                          },
                          "required": [
                            "columnsOrder",
                            "columnsVisibility",
                            "columnsWidth"
                          ]
                        },
                        "isArchived": {
                          "type": "boolean"
                        },
                        "isClosed": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "version",
                        "groups",
                        "events",
                        "id",
                        "name",
                        "icon",
                        "edges",
                        "variables",
                        "createdAt",
                        "updatedAt",
                        "folderId",
                        "publicId",
                        "organizationId",
                        "resultsTablePreferences",
                        "isArchived",
                        "isClosed"
                      ]
                    }
                  },
                  "required": [
                    "workflow"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "workflow-listWorkflows",
        "summary": "List workflows",
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "[Where to find my organization ID?](../how-to#how-to-find-my-organizationid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my organization ID?](../how-to#how-to-find-my-organizationid)"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "folderId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string",
                            "nullable": true
                          },
                          "id": {
                            "type": "string"
                          },
                          "publishedWorkflowId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "icon",
                          "id"
                        ]
                      }
                    }
                  },
                  "required": [
                    "workflows"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/{workflowId}": {
      "patch": {
        "operationId": "workflow-updateWorkflow",
        "summary": "Update a workflow",
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "workflow": {
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "string",
                        "default": "1"
                      },
                      "name": {
                        "type": "string"
                      },
                      "icon": {
                        "type": "string",
                        "nullable": true
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "graphCoordinates": {
                              "type": "object",
                              "properties": {
                                "x": {
                                  "type": "number"
                                },
                                "y": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "x",
                                "y"
                              ]
                            },
                            "blocks": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/block"
                              }
                            }
                          },
                          "required": [
                            "id",
                            "title",
                            "graphCoordinates",
                            "blocks"
                          ]
                        }
                      },
                      "folderId": {
                        "type": "string",
                        "nullable": true
                      },
                      "variables": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "groupId": {
                              "type": "string"
                            },
                            "isSessionVariable": {
                              "type": "boolean"
                            },
                            "value": {
                              "nullable": true,
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      },
                      "edges": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "from": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "blockId": {
                                      "type": "string"
                                    },
                                    "itemId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "blockId"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "eventId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "eventId"
                                  ]
                                }
                              ]
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "groupId": {
                                  "type": "string"
                                },
                                "blockId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "groupId"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "from",
                            "to"
                          ]
                        }
                      },
                      "resultsTablePreferences": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "columnsOrder": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "columnsVisibility": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "boolean"
                            }
                          },
                          "columnsWidth": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "number"
                            }
                          }
                        },
                        "required": [
                          "columnsOrder",
                          "columnsVisibility",
                          "columnsWidth"
                        ]
                      },
                      "publicId": {
                        "type": "string",
                        "nullable": true
                      },
                      "isClosed": {
                        "type": "boolean"
                      },
                      "events": {
                        "type": "array",
                        "maxItems": 1,
                        "minItems": 1,
                        "items": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/event"
                            }
                          ]
                        }
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "title": "Workflow"
                  }
                },
                "required": [
                  "workflow"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflow": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "default": "1"
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "graphCoordinates": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "number"
                                  },
                                  "y": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "x",
                                  "y"
                                ]
                              },
                              "blocks": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/block"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "title",
                              "graphCoordinates",
                              "blocks"
                            ]
                          }
                        },
                        "events": {
                          "type": "array",
                          "maxItems": 1,
                          "minItems": 1,
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/event"
                              }
                            ]
                          }
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "icon": {
                          "type": "string",
                          "nullable": true
                        },
                        "edges": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "from": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "blockId": {
                                        "type": "string"
                                      },
                                      "itemId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "blockId"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "eventId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "eventId"
                                    ]
                                  }
                                ]
                              },
                              "to": {
                                "type": "object",
                                "properties": {
                                  "groupId": {
                                    "type": "string"
                                  },
                                  "blockId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "groupId"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "from",
                              "to"
                            ]
                          }
                        },
                        "variables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "groupId": {
                                "type": "string"
                              },
                              "isSessionVariable": {
                                "type": "boolean"
                              },
                              "value": {
                                "nullable": true,
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "folderId": {
                          "type": "string",
                          "nullable": true
                        },
                        "publicId": {
                          "type": "string",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "resultsTablePreferences": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "columnsOrder": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "columnsVisibility": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "boolean"
                              }
                            },
                            "columnsWidth": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number"
                              }
                            }
                          },
                          "required": [
                            "columnsOrder",
                            "columnsVisibility",
                            "columnsWidth"
                          ]
                        },
                        "isArchived": {
                          "type": "boolean"
                        },
                        "isClosed": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "version",
                        "groups",
                        "events",
                        "id",
                        "name",
                        "icon",
                        "edges",
                        "variables",
                        "createdAt",
                        "updatedAt",
                        "folderId",
                        "publicId",
                        "organizationId",
                        "resultsTablePreferences",
                        "isArchived",
                        "isClosed"
                      ]
                    }
                  },
                  "required": [
                    "workflow"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "workflow-getWorkflow",
        "summary": "Get a workflow",
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "migrateToLatestVersion",
            "description": "If enabled, the workflow will be converted to the latest schema version",
            "schema": {
              "type": "boolean",
              "default": false,
              "description": "If enabled, the workflow will be converted to the latest schema version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflow": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "default": "1"
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "graphCoordinates": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "number"
                                  },
                                  "y": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "x",
                                  "y"
                                ]
                              },
                              "blocks": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/block"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "title",
                              "graphCoordinates",
                              "blocks"
                            ]
                          }
                        },
                        "events": {
                          "type": "array",
                          "maxItems": 1,
                          "minItems": 1,
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/event"
                              }
                            ]
                          }
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "icon": {
                          "type": "string",
                          "nullable": true
                        },
                        "edges": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "from": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "blockId": {
                                        "type": "string"
                                      },
                                      "itemId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "blockId"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "eventId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "eventId"
                                    ]
                                  }
                                ]
                              },
                              "to": {
                                "type": "object",
                                "properties": {
                                  "groupId": {
                                    "type": "string"
                                  },
                                  "blockId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "groupId"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "from",
                              "to"
                            ]
                          }
                        },
                        "variables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "groupId": {
                                "type": "string"
                              },
                              "isSessionVariable": {
                                "type": "boolean"
                              },
                              "value": {
                                "nullable": true,
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "folderId": {
                          "type": "string",
                          "nullable": true
                        },
                        "publicId": {
                          "type": "string",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "resultsTablePreferences": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "columnsOrder": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "columnsVisibility": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "boolean"
                              }
                            },
                            "columnsWidth": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number"
                              }
                            }
                          },
                          "required": [
                            "columnsOrder",
                            "columnsVisibility",
                            "columnsWidth"
                          ]
                        },
                        "isArchived": {
                          "type": "boolean"
                        },
                        "isClosed": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "version",
                        "groups",
                        "events",
                        "id",
                        "name",
                        "icon",
                        "edges",
                        "variables",
                        "createdAt",
                        "updatedAt",
                        "folderId",
                        "publicId",
                        "organizationId",
                        "resultsTablePreferences",
                        "isArchived",
                        "isClosed"
                      ]
                    },
                    "currentUserMode": {
                      "type": "string",
                      "enum": [
                        "guest",
                        "read",
                        "write"
                      ]
                    }
                  },
                  "required": [
                    "workflow",
                    "currentUserMode"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "workflow-deleteWorkflow",
        "summary": "Delete a workflow",
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/{workflowId}/publishedWorkflow": {
      "get": {
        "operationId": "workflow-getPublishedWorkflow",
        "summary": "Get published workflow",
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "migrateToLatestVersion",
            "description": "If enabled, the workflow will be converted to the latest schema version",
            "schema": {
              "type": "boolean",
              "default": false,
              "description": "If enabled, the workflow will be converted to the latest schema version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "publishedWorkflow": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string",
                          "default": "1"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "graphCoordinates": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "number"
                                  },
                                  "y": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "x",
                                  "y"
                                ]
                              },
                              "blocks": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/block"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "title",
                              "graphCoordinates",
                              "blocks"
                            ]
                          }
                        },
                        "events": {
                          "type": "array",
                          "maxItems": 1,
                          "minItems": 1,
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/event"
                              }
                            ]
                          }
                        },
                        "edges": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "from": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "blockId": {
                                        "type": "string"
                                      },
                                      "itemId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "blockId"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "eventId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "eventId"
                                    ]
                                  }
                                ]
                              },
                              "to": {
                                "type": "object",
                                "properties": {
                                  "groupId": {
                                    "type": "string"
                                  },
                                  "blockId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "groupId"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "from",
                              "to"
                            ]
                          }
                        },
                        "variables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "groupId": {
                                "type": "string"
                              },
                              "isSessionVariable": {
                                "type": "boolean"
                              },
                              "value": {
                                "nullable": true,
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "version",
                        "createdAt",
                        "updatedAt",
                        "workflowId",
                        "groups",
                        "events",
                        "edges",
                        "variables"
                      ]
                    },
                    "version": {}
                  },
                  "required": [
                    "publishedWorkflow"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/{workflowId}/publish": {
      "post": {
        "operationId": "workflow-publishWorkflow",
        "summary": "Publish a workflow",
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/{workflowId}/unpublish": {
      "post": {
        "operationId": "workflow-unpublishWorkflow",
        "summary": "Unpublish a workflow",
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/import": {
      "post": {
        "operationId": "workflow-importWorkflow",
        "summary": "Import a workflow",
        "tags": [
          "Workflow"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationId": {
                    "type": "string",
                    "description": "[Where to find my organization ID?](../how-to#how-to-find-my-organizationid)"
                  },
                  "workflow": {
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "string",
                        "default": "1"
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "graphCoordinates": {
                              "type": "object",
                              "properties": {
                                "x": {
                                  "type": "number"
                                },
                                "y": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "x",
                                "y"
                              ]
                            },
                            "blocks": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/block"
                              }
                            }
                          },
                          "required": [
                            "id",
                            "title",
                            "graphCoordinates",
                            "blocks"
                          ]
                        }
                      },
                      "events": {
                        "type": "array",
                        "maxItems": 1,
                        "minItems": 1,
                        "items": {
                          "oneOf": [
                            {
                              "$ref": "#/components/schemas/event"
                            }
                          ]
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "icon": {
                        "type": "string",
                        "nullable": true
                      },
                      "edges": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "from": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "blockId": {
                                      "type": "string"
                                    },
                                    "itemId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "blockId"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "eventId": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "eventId"
                                  ]
                                }
                              ]
                            },
                            "to": {
                              "type": "object",
                              "properties": {
                                "groupId": {
                                  "type": "string"
                                },
                                "blockId": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "groupId"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "from",
                            "to"
                          ]
                        }
                      },
                      "variables": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "groupId": {
                              "type": "string"
                            },
                            "isSessionVariable": {
                              "type": "boolean"
                            },
                            "value": {
                              "nullable": true,
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      },
                      "folderId": {
                        "type": "string",
                        "nullable": true
                      },
                      "resultsTablePreferences": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "columnsOrder": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "columnsVisibility": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "boolean"
                            }
                          },
                          "columnsWidth": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "number"
                            }
                          }
                        },
                        "required": [
                          "columnsOrder",
                          "columnsVisibility",
                          "columnsWidth"
                        ]
                      }
                    },
                    "required": [
                      "groups",
                      "events",
                      "name",
                      "icon",
                      "edges",
                      "variables",
                      "folderId"
                    ],
                    "title": "Workflow V1"
                  }
                },
                "required": [
                  "organizationId",
                  "workflow"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflow": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string",
                          "default": "1"
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "graphCoordinates": {
                                "type": "object",
                                "properties": {
                                  "x": {
                                    "type": "number"
                                  },
                                  "y": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "x",
                                  "y"
                                ]
                              },
                              "blocks": {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/block"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "title",
                              "graphCoordinates",
                              "blocks"
                            ]
                          }
                        },
                        "events": {
                          "type": "array",
                          "maxItems": 1,
                          "minItems": 1,
                          "items": {
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/event"
                              }
                            ]
                          }
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "icon": {
                          "type": "string",
                          "nullable": true
                        },
                        "edges": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "from": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "blockId": {
                                        "type": "string"
                                      },
                                      "itemId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "blockId"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "eventId": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "eventId"
                                    ]
                                  }
                                ]
                              },
                              "to": {
                                "type": "object",
                                "properties": {
                                  "groupId": {
                                    "type": "string"
                                  },
                                  "blockId": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "groupId"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "from",
                              "to"
                            ]
                          }
                        },
                        "variables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "groupId": {
                                "type": "string"
                              },
                              "isSessionVariable": {
                                "type": "boolean"
                              },
                              "value": {
                                "nullable": true,
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "folderId": {
                          "type": "string",
                          "nullable": true
                        },
                        "publicId": {
                          "type": "string",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "resultsTablePreferences": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "columnsOrder": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "columnsVisibility": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "boolean"
                              }
                            },
                            "columnsWidth": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number"
                              }
                            }
                          },
                          "required": [
                            "columnsOrder",
                            "columnsVisibility",
                            "columnsWidth"
                          ]
                        },
                        "isArchived": {
                          "type": "boolean"
                        },
                        "isClosed": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "version",
                        "groups",
                        "events",
                        "id",
                        "name",
                        "icon",
                        "edges",
                        "variables",
                        "createdAt",
                        "updatedAt",
                        "folderId",
                        "publicId",
                        "organizationId",
                        "resultsTablePreferences",
                        "isArchived",
                        "isClosed"
                      ]
                    }
                  },
                  "required": [
                    "workflow"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/processors": {
      "get": {
        "operationId": "processors-listProcessors",
        "summary": "List processors",
        "tags": [
          "Processor"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "description": "[Where to find my organization ID?](../how-to#how-to-find-my-organizationid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my organization ID?](../how-to#how-to-find-my-organizationid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "processors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "config": {
                            "type": "object",
                            "properties": {
                              "sections": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "fieldsToExtract": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "fieldName": {
                                            "type": "string"
                                          },
                                          "description": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "description"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "fieldsToExtract"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "sections"
                            ]
                          },
                          "published": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "EXTRACT",
                              "CLASSIFY"
                            ]
                          },
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "config",
                          "published",
                          "name",
                          "type",
                          "id"
                        ]
                      }
                    }
                  },
                  "required": [
                    "processors"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "processors-createProcessor",
        "summary": "Create a processor",
        "tags": [
          "Processor"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationId": {
                    "type": "string"
                  },
                  "processor": {
                    "type": "object",
                    "properties": {
                      "config": {
                        "type": "object",
                        "properties": {
                          "sections": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "fieldsToExtract": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "fieldName": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "description"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "fieldsToExtract"
                              ]
                            }
                          }
                        },
                        "required": [
                          "sections"
                        ]
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "EXTRACT",
                          "CLASSIFY"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "organizationId",
                  "processor"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "processor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "creatorId": {
                          "type": "string",
                          "nullable": true
                        },
                        "config": {
                          "type": "object",
                          "properties": {
                            "sections": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "fieldsToExtract": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "fieldName": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "name",
                                  "fieldsToExtract"
                                ]
                              }
                            }
                          },
                          "required": [
                            "sections"
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "extendWorkflowId": {
                              "type": "string",
                              "nullable": true
                            },
                            "extendWorkflowVersion": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "extendWorkflowId",
                            "extendWorkflowVersion"
                          ]
                        },
                        "published": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "EXTRACT",
                            "CLASSIFY"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                        "organizationId",
                        "creatorId",
                        "config",
                        "metadata",
                        "published",
                        "name",
                        "type"
                      ]
                    }
                  },
                  "required": [
                    "processor"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/processors/{processorId}": {
      "delete": {
        "operationId": "processors-deleteProcessor",
        "summary": "Delete a processor",
        "tags": [
          "Processor"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "processorId",
            "description": "[Where to find my processor's ID?](../how-to#how-to-find-my-processorid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my processor's ID?](../how-to#how-to-find-my-processorid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "enum": [
                        "success"
                      ]
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "processors-getProcessor",
        "summary": "Get a processor",
        "tags": [
          "Processor"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "processorId",
            "description": "[Where to find my processor's ID?](../how-to#how-to-find-my-processorid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my processor's ID?](../how-to#how-to-find-my-processorid)"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "processor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "creatorId": {
                          "type": "string",
                          "nullable": true
                        },
                        "config": {
                          "type": "object",
                          "properties": {
                            "sections": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "fieldsToExtract": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "fieldName": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "name",
                                  "fieldsToExtract"
                                ]
                              }
                            }
                          },
                          "required": [
                            "sections"
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "extendWorkflowId": {
                              "type": "string",
                              "nullable": true
                            },
                            "extendWorkflowVersion": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "extendWorkflowId",
                            "extendWorkflowVersion"
                          ]
                        },
                        "published": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "EXTRACT",
                            "CLASSIFY"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                        "organizationId",
                        "creatorId",
                        "config",
                        "metadata",
                        "published",
                        "name",
                        "type"
                      ]
                    }
                  },
                  "required": [
                    "processor"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "processors-updateProcessor",
        "summary": "Update a processor",
        "tags": [
          "Processor"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "processorId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "processor": {
                    "type": "object",
                    "properties": {
                      "config": {
                        "type": "object",
                        "properties": {
                          "sections": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "fieldsToExtract": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "fieldName": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "description"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "fieldsToExtract"
                              ]
                            }
                          }
                        },
                        "required": [
                          "sections"
                        ]
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "processor"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "processor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string"
                        },
                        "creatorId": {
                          "type": "string",
                          "nullable": true
                        },
                        "config": {
                          "type": "object",
                          "properties": {
                            "sections": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "fieldsToExtract": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "fieldName": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "description"
                                      ]
                                    }
                                  }
                                },
                                "required": [
                                  "name",
                                  "fieldsToExtract"
                                ]
                              }
                            }
                          },
                          "required": [
                            "sections"
                          ]
                        },
                        "metadata": {
                          "type": "object",
                          "properties": {
                            "extendWorkflowId": {
                              "type": "string",
                              "nullable": true
                            },
                            "extendWorkflowVersion": {
                              "type": "string",
                              "nullable": true
                            }
                          },
                          "required": [
                            "extendWorkflowId",
                            "extendWorkflowVersion"
                          ]
                        },
                        "published": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "EXTRACT",
                            "CLASSIFY"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                        "organizationId",
                        "creatorId",
                        "config",
                        "metadata",
                        "published",
                        "name",
                        "type"
                      ]
                    }
                  },
                  "required": [
                    "processor"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/{workflowId}/webhookBlocks": {
      "get": {
        "operationId": "webhook-listWebhookBlocks",
        "summary": "List webhook blocks",
        "description": "Returns a list of all the webhook blocks that you can subscribe to.",
        "tags": [
          "Webhook"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "webhookBlocks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Webhook"
                            ]
                          },
                          "label": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "label"
                        ]
                      }
                    }
                  },
                  "required": [
                    "webhookBlocks"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/{workflowId}/webhookBlocks/{blockId}/subscribe": {
      "post": {
        "operationId": "webhook-subscribeWebhook",
        "summary": "Subscribe to webhook block",
        "tags": [
          "Webhook"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "blockId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "url"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/{workflowId}/webhookBlocks/{blockId}/unsubscribe": {
      "post": {
        "operationId": "webhook-unsubscribeWebhook",
        "summary": "Unsubscribe from webhook block",
        "tags": [
          "Webhook"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "blockId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "url"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/credentials": {
      "post": {
        "operationId": "credentials-createCredentials",
        "summary": "Create credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credentials": {
                    "allOf": [
                      {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "data": {
                                "type": "object",
                                "properties": {
                                  "host": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "isTlsEnabled": {
                                    "type": "boolean"
                                  },
                                  "port": {
                                    "type": "number"
                                  },
                                  "from": {
                                    "type": "object",
                                    "properties": {
                                      "email": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "port",
                                  "from"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "smtp"
                                ]
                              },
                              "organizationId": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "data",
                              "type",
                              "organizationId",
                              "name"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                },
                "required": [
                  "credentials"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentialsId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialsId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "credentials-listCredentials",
        "summary": "List organization credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "smtp"
                  ]
                },
                {
                  "type": "string",
                  "enum": [
                    "google sheets"
                  ]
                }
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentials": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "credentials"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/credentials/{credentialsId}": {
      "delete": {
        "operationId": "credentials-deleteCredentials",
        "summary": "Delete credentials",
        "tags": [
          "Credentials"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "credentialsId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "organizationId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credentialsId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "credentialsId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/{workflowId}/workflowExecutions": {
      "get": {
        "operationId": "workflowExecutions-getWorkflowExecutions",
        "summary": "List workflowExecutions ordered by descending creation date",
        "tags": [
          "WorkflowExecutions"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timeFilter",
            "schema": {
              "type": "string",
              "enum": [
                "today",
                "last7Days",
                "last30Days",
                "monthToDate",
                "lastMonth",
                "yearToDate",
                "allTime"
              ],
              "default": "last7Days"
            }
          },
          {
            "in": "query",
            "name": "timeZone",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflowExecutions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "workflowId": {
                            "type": "string"
                          },
                          "variables": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "groupId": {
                                  "type": "string"
                                },
                                "isSessionVariable": {
                                  "type": "boolean"
                                },
                                "value": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "value"
                              ]
                            }
                          },
                          "isCompleted": {
                            "type": "boolean"
                          },
                          "isTest": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "hasStarted": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "isArchived": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "hasFailed": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "needsReview": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "hasBeenReviewed": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "answers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "type": "string"
                                },
                                "workflowExecutionId": {
                                  "type": "string"
                                },
                                "blockId": {
                                  "type": "string"
                                },
                                "groupId": {
                                  "type": "string"
                                },
                                "variableId": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "content": {
                                  "type": "string"
                                },
                                "storageUsed": {
                                  "type": "number",
                                  "nullable": true
                                },
                                "status": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "PENDING",
                                    "PROCESSING",
                                    "FAILED",
                                    "NEEDS_REVIEW",
                                    "REVIEWED",
                                    "PROCESSED",
                                    null
                                  ]
                                }
                              },
                              "required": [
                                "createdAt",
                                "workflowExecutionId",
                                "blockId",
                                "groupId",
                                "variableId",
                                "content",
                                "storageUsed",
                                "status"
                              ]
                            }
                          }
                        },
                        "required": [
                          "id",
                          "createdAt",
                          "workflowId",
                          "variables",
                          "isCompleted",
                          "isTest",
                          "hasStarted",
                          "isArchived",
                          "hasFailed",
                          "needsReview",
                          "hasBeenReviewed",
                          "answers"
                        ]
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "workflowExecutions"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "workflowExecutions-deleteWorkflowExecutions",
        "summary": "Delete workflowExecutions",
        "tags": [
          "WorkflowExecutions"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "description": "[Where to find my bot's ID?](../how-to#how-to-find-my-workflowid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my bot's ID?](../how-to#how-to-find-my-workflowid)"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "workflowExecutionIds",
            "description": "Comma separated list of ids. If not provided, all workflowExecutions will be deleted. ⚠️",
            "schema": {
              "type": "string",
              "description": "Comma separated list of ids. If not provided, all workflowExecutions will be deleted. ⚠️"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/{workflowId}/workflowExecutions/{workflowExecutionId}": {
      "get": {
        "operationId": "workflowExecutions-getWorkflowExecution",
        "summary": "Get workflow execution by id",
        "tags": [
          "WorkflowExecutions"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "workflowExecutionId",
            "description": "The `workflowExecutionId` is returned by the /startChat endpoint or you can find it by listing workflowExecutions with `/workflowExecutions` endpoint",
            "schema": {
              "type": "string",
              "description": "The `workflowExecutionId` is returned by the /startChat endpoint or you can find it by listing workflowExecutions with `/workflowExecutions` endpoint"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "workflowExecution": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "variables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "groupId": {
                                "type": "string"
                              },
                              "isSessionVariable": {
                                "type": "boolean"
                              },
                              "value": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "value"
                            ]
                          }
                        },
                        "isCompleted": {
                          "type": "boolean"
                        },
                        "isTest": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "hasStarted": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "isArchived": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "hasFailed": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "needsReview": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "hasBeenReviewed": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "answers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string"
                              },
                              "workflowExecutionId": {
                                "type": "string"
                              },
                              "blockId": {
                                "type": "string"
                              },
                              "groupId": {
                                "type": "string"
                              },
                              "variableId": {
                                "type": "string",
                                "nullable": true
                              },
                              "content": {
                                "type": "string"
                              },
                              "storageUsed": {
                                "type": "number",
                                "nullable": true
                              },
                              "status": {
                                "type": "string",
                                "nullable": true,
                                "enum": [
                                  "PENDING",
                                  "PROCESSING",
                                  "FAILED",
                                  "NEEDS_REVIEW",
                                  "REVIEWED",
                                  "PROCESSED",
                                  null
                                ]
                              }
                            },
                            "required": [
                              "createdAt",
                              "workflowExecutionId",
                              "blockId",
                              "groupId",
                              "variableId",
                              "content",
                              "storageUsed",
                              "status"
                            ]
                          }
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "workflowId",
                        "variables",
                        "isCompleted",
                        "isTest",
                        "hasStarted",
                        "isArchived",
                        "hasFailed",
                        "needsReview",
                        "hasBeenReviewed",
                        "answers"
                      ]
                    }
                  },
                  "required": [
                    "workflowExecution"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workflows/{workflowId}/workflowExecutions/{workflowExecutionId}/logs": {
      "get": {
        "operationId": "workflowExecutions-getWorkflowExecutionLogs",
        "summary": "List workflow execution logs",
        "tags": [
          "WorkflowExecutions"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "workflowId",
            "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)",
            "schema": {
              "type": "string",
              "description": "[Where to find my workflow's ID?](../how-to#how-to-find-my-workflowid)"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "workflowExecutionId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "workflowExecutionId": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "details": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "createdAt",
                          "workflowExecutionId",
                          "status",
                          "description",
                          "details"
                        ]
                      }
                    }
                  },
                  "required": [
                    "logs"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders/{folderId}": {
      "get": {
        "operationId": "folders-getFolder",
        "summary": "Get folder",
        "tags": [
          "Folder"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folderId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "organizationId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parentFolderId": {
                          "type": "string",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                        "name",
                        "parentFolderId",
                        "organizationId"
                      ]
                    }
                  },
                  "required": [
                    "folder"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "folders-updateFolder",
        "summary": "Update a folder",
        "tags": [
          "Folder"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folderId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationId": {
                    "type": "string"
                  },
                  "folder": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "parentFolderId": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "required": [
                  "organizationId",
                  "folder"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parentFolderId": {
                          "type": "string",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                        "name",
                        "parentFolderId",
                        "organizationId"
                      ]
                    }
                  },
                  "required": [
                    "folder"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "folders-deleteFolder",
        "summary": "Delete a folder",
        "tags": [
          "Folder"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "folderId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "organizationId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parentFolderId": {
                          "type": "string",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                        "name",
                        "parentFolderId",
                        "organizationId"
                      ]
                    }
                  },
                  "required": [
                    "folder"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/folders": {
      "post": {
        "operationId": "folders-createFolder",
        "summary": "Create a folder",
        "tags": [
          "Folder"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationId": {
                    "type": "string"
                  },
                  "folderName": {
                    "type": "string",
                    "default": ""
                  },
                  "parentFolderId": {
                    "type": "string"
                  }
                },
                "required": [
                  "organizationId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folder": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parentFolderId": {
                          "type": "string",
                          "nullable": true
                        },
                        "organizationId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "createdAt",
                        "updatedAt",
                        "name",
                        "parentFolderId",
                        "organizationId"
                      ]
                    }
                  },
                  "required": [
                    "folder"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "folders-listFolders",
        "summary": "List folders",
        "tags": [
          "Folder"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "parentFolderId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "folders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "parentFolderId": {
                            "type": "string",
                            "nullable": true
                          },
                          "organizationId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "createdAt",
                          "updatedAt",
                          "name",
                          "parentFolderId",
                          "organizationId"
                        ]
                      }
                    }
                  },
                  "required": [
                    "folders"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/organizations": {
      "get": {
        "operationId": "organizations-listOrganizations",
        "summary": "List organizations",
        "tags": [
          "Organization"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "organizations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string",
                            "nullable": true
                          },
                          "plan": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "icon",
                          "plan"
                        ]
                      }
                    }
                  },
                  "required": [
                    "organizations"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/notes/{voiceNoteId}/audio": {
      "post": {
        "operationId": "transcript-createVoiceNoteAudio",
        "summary": "Save voice note audio",
        "tags": [
          "Transcript"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "voiceNoteId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "storageId": {
                    "type": "string"
                  },
                  "patientId": {
                    "type": "string"
                  },
                  "appointmentId": {
                    "type": "string"
                  },
                  "isProcessed": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "storageId",
                  "isProcessed"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "voiceNoteAudio": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "storageId": {
                          "type": "string"
                        },
                        "voiceNoteId": {
                          "type": "string"
                        },
                        "userId": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "storageId",
                        "voiceNoteId",
                        "userId",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": [
                    "voiceNoteAudio"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/notes/{voiceNoteId}/sentences": {
      "get": {
        "operationId": "transcript-getFinalizedSentencesByVoiceNotePagination",
        "summary": "Get paginated finalized sentences for a voice note",
        "tags": [
          "Transcript"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "voiceNoteId",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "cursor",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "default": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "transcript": {
                            "type": "string"
                          },
                          "start": {
                            "type": "number"
                          },
                          "end": {
                            "type": "number"
                          },
                          "speaker": {
                            "type": "number",
                            "nullable": true
                          },
                          "speakerId": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "transcript",
                          "start",
                          "end",
                          "speaker",
                          "speakerId"
                        ]
                      }
                    },
                    "nextCursor": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "items",
                    "nextCursor"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/transcripts/search": {
      "post": {
        "operationId": "transcript-searchSentencesByEmbedding",
        "summary": "Search sentences by embedding",
        "tags": [
          "Transcript"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "searchQuery": {
                    "type": "string"
                  },
                  "filterByCurrentUser": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "searchQuery"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "score": {
                        "type": "number"
                      },
                      "finalizedSentenceId": {
                        "type": "string"
                      },
                      "voiceNoteId": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "score",
                      "finalizedSentenceId",
                      "voiceNoteId"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sentences": {
      "get": {
        "operationId": "transcript-fetchMultipleFinalizedSentenceDetails",
        "summary": "Fetch details for multiple finalized sentences",
        "tags": [
          "Transcript"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sentenceIds",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "voiceNoteId": {
                        "type": "string"
                      },
                      "userId": {
                        "type": "string",
                        "nullable": true
                      },
                      "speaker": {
                        "type": "number",
                        "nullable": true
                      },
                      "speakerId": {
                        "type": "string",
                        "nullable": true
                      },
                      "transcript": {
                        "type": "string"
                      },
                      "start": {
                        "type": "number"
                      },
                      "end": {
                        "type": "number"
                      },
                      "wordCount": {
                        "type": "number",
                        "nullable": true
                      },
                      "sentenceEmbeddingId": {
                        "type": "string",
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "voiceNoteId",
                      "userId",
                      "speaker",
                      "speakerId",
                      "transcript",
                      "start",
                      "end",
                      "wordCount",
                      "sentenceEmbeddingId",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/appointments": {
      "get": {
        "operationId": "appointments-listAppointments",
        "summary": "List appointments",
        "tags": [
          "Visits"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "number",
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string",
              "default": "2024-09-30T21:14:27.903Z"
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string",
              "default": "2024-10-31T21:14:27.903Z"
            }
          },
          {
            "in": "query",
            "name": "operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "active",
                "archived"
              ]
            }
          },
          {
            "in": "query",
            "name": "organizationId",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "patientId",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "in": "query",
            "name": "resourceId",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "start": {
                            "type": "string"
                          },
                          "end": {
                            "type": "string"
                          },
                          "organizationId": {
                            "type": "string"
                          },
                          "order": {
                            "type": "number",
                            "nullable": true
                          },
                          "patientId": {
                            "type": "string"
                          },
                          "resourceId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "createdAt",
                          "start",
                          "end",
                          "organizationId",
                          "order",
                          "patientId",
                          "resourceId"
                        ]
                      }
                    },
                    "pageCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "pageCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/notes": {
      "get": {
        "operationId": "voiceNotes-listNotes",
        "summary": "List notes",
        "tags": [
          "Notes"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "per_page",
            "schema": {
              "type": "number",
              "default": 20
            }
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string",
              "default": "2024-09-30T21:14:27.903Z"
            }
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string",
              "default": "2024-10-31T21:14:27.903Z"
            }
          },
          {
            "in": "query",
            "name": "operator",
            "schema": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "active",
                "archived"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string",
                            "nullable": true
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "nullable": true
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "createdAt",
                          "user"
                        ]
                      }
                    },
                    "pageCount": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "data",
                    "pageCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "voiceNotes-createVoiceNote",
        "summary": "Create a new voice note",
        "tags": [
          "Voice Notes"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "patientId": {
                    "type": "string"
                  },
                  "jobId": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "patientId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "voiceNoteId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "voiceNoteId"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/notes/{voiceNoteId}": {
      "patch": {
        "operationId": "voiceNotes-updateVoiceNoteDetails",
        "summary": "Update voice note details",
        "tags": [
          "Voice Notes"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "voiceNoteId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "updates": {
                    "type": "object",
                    "properties": {
                      "newTitle": {
                        "type": "string"
                      },
                      "duration": {
                        "type": "number"
                      },
                      "isFavorite": {
                        "type": "boolean"
                      },
                      "isDeleted": {
                        "type": "boolean"
                      },
                      "date": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "updates"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "updatedAt"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "voiceNotes-deleteVoiceNoteAndRelatedRecords",
        "summary": "Delete a voice note and related records",
        "tags": [
          "Voice Notes"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "voiceNoteId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "success"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/patients": {
      "get": {
        "operationId": "patients-getPatientsForOrganization",
        "summary": "Get patients for organization",
        "tags": [
          "Patients"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "organizationId",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "firstname": {
                        "type": "string",
                        "nullable": true
                      },
                      "middlename": {
                        "type": "string",
                        "nullable": true
                      },
                      "lastname": {
                        "type": "string",
                        "nullable": true
                      },
                      "email": {
                        "type": "string",
                        "nullable": true
                      },
                      "suffix": {
                        "type": "string",
                        "nullable": true
                      },
                      "image": {
                        "type": "string",
                        "nullable": true
                      },
                      "dob": {
                        "type": "string",
                        "nullable": true
                      },
                      "deceased": {
                        "type": "boolean",
                        "nullable": true
                      },
                      "sex": {
                        "type": "string",
                        "nullable": true
                      },
                      "fmrn": {
                        "type": "string",
                        "nullable": true
                      },
                      "omrn": {
                        "type": "string",
                        "nullable": true
                      },
                      "ssn": {
                        "type": "string",
                        "nullable": true
                      },
                      "address": {
                        "type": "string",
                        "nullable": true
                      },
                      "city": {
                        "type": "string",
                        "nullable": true
                      },
                      "state": {
                        "type": "string",
                        "nullable": true
                      },
                      "stateZIP": {
                        "type": "string",
                        "nullable": true
                      },
                      "county": {
                        "type": "string",
                        "nullable": true
                      },
                      "aptNumber": {
                        "type": "string",
                        "nullable": true
                      },
                      "phone": {
                        "type": "string",
                        "nullable": true
                      },
                      "homePhone": {
                        "type": "string",
                        "nullable": true
                      },
                      "workPhone": {
                        "type": "string",
                        "nullable": true
                      },
                      "cellPhone": {
                        "type": "string",
                        "nullable": true
                      },
                      "fax": {
                        "type": "string",
                        "nullable": true
                      },
                      "language": {
                        "type": "string",
                        "nullable": true
                      },
                      "locationType": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                          "HOME",
                          "ASSISTED_FACILITY",
                          "OTHER",
                          null
                        ]
                      },
                      "residenceType": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                          "HOME",
                          "SNF",
                          "NF",
                          "ASSISTED_FACILITY",
                          null
                        ]
                      },
                      "residenceName": {
                        "type": "string",
                        "nullable": true
                      },
                      "timezone": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                          "EST",
                          "CST",
                          "MST",
                          "PST",
                          "AST",
                          "HST",
                          "AK",
                          null
                        ]
                      },
                      "physician": {
                        "type": "string",
                        "nullable": true
                      },
                      "admissionSource": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                          "NON_HEALTH_CARE_FACILITY",
                          "CLINIC",
                          "HOSPITAL",
                          "SNF",
                          "HEALTH_CARE_FACILITY",
                          "COURT_LAW",
                          "NA",
                          null
                        ]
                      },
                      "insuranceProvider": {
                        "type": "string",
                        "nullable": true
                      },
                      "medicareNumber": {
                        "type": "string",
                        "nullable": true
                      },
                      "medicaidNumber": {
                        "type": "string",
                        "nullable": true
                      },
                      "record": {
                        "type": "string",
                        "enum": [
                          "CAREGIVER",
                          "PATIENT",
                          "OTHER"
                        ]
                      },
                      "stage": {
                        "type": "string",
                        "nullable": true,
                        "enum": [
                          "LEAD",
                          "QUALIFIED",
                          "OPPORTUNITY",
                          "LOST",
                          "WON",
                          null
                        ]
                      },
                      "organizationId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "surgeContactId": {
                        "type": "string",
                        "nullable": true
                      },
                      "representative": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "patientId": {
                            "type": "string"
                          },
                          "firstname": {
                            "type": "string"
                          },
                          "lastname": {
                            "type": "string"
                          },
                          "relationship": {
                            "type": "string",
                            "enum": [
                              "SPOUSE",
                              "PARENT",
                              "CHILD",
                              "OTHER_FAMILY_MEMBER",
                              "FRIEND",
                              "LEGAL_GUARDIAN",
                              "OTHER"
                            ]
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "samePatientAddress": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "address": {
                            "type": "string",
                            "nullable": true
                          },
                          "city": {
                            "type": "string",
                            "nullable": true
                          },
                          "state": {
                            "type": "string",
                            "nullable": true
                          },
                          "stateZIP": {
                            "type": "string",
                            "nullable": true
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true
                          },
                          "language": {
                            "type": "string",
                            "nullable": true
                          },
                          "legallyAuthorized": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "patientId",
                          "firstname",
                          "lastname",
                          "relationship",
                          "legallyAuthorized",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "record",
                      "organizationId",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    },
    "/v1/patients/search": {
      "get": {
        "operationId": "patients-search",
        "summary": "Search patients",
        "tags": [
          "Patient"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "number",
              "default": 10
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "id",
                "name",
                "firstname",
                "middlename",
                "lastname",
                "email",
                "suffix",
                "image",
                "dob",
                "deceased",
                "sex",
                "fmrn",
                "omrn",
                "ssn",
                "address",
                "city",
                "state",
                "stateZIP",
                "county",
                "aptNumber",
                "phone",
                "homePhone",
                "workPhone",
                "cellPhone",
                "fax",
                "language",
                "locationType",
                "residenceType",
                "residenceName",
                "timezone",
                "physician",
                "admissionSource",
                "insuranceProvider",
                "medicareNumber",
                "medicaidNumber",
                "record",
                "stage",
                "organizationId",
                "createdAt",
                "updatedAt",
                "surgeContactId"
              ],
              "default": "id"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "patients": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "firstname": {
                            "type": "string",
                            "nullable": true
                          },
                          "middlename": {
                            "type": "string",
                            "nullable": true
                          },
                          "lastname": {
                            "type": "string",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "suffix": {
                            "type": "string",
                            "nullable": true
                          },
                          "image": {
                            "type": "string",
                            "nullable": true
                          },
                          "dob": {
                            "type": "string",
                            "nullable": true
                          },
                          "deceased": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "sex": {
                            "type": "string",
                            "nullable": true
                          },
                          "fmrn": {
                            "type": "string",
                            "nullable": true
                          },
                          "omrn": {
                            "type": "string",
                            "nullable": true
                          },
                          "ssn": {
                            "type": "string",
                            "nullable": true
                          },
                          "address": {
                            "type": "string",
                            "nullable": true
                          },
                          "city": {
                            "type": "string",
                            "nullable": true
                          },
                          "state": {
                            "type": "string",
                            "nullable": true
                          },
                          "stateZIP": {
                            "type": "string",
                            "nullable": true
                          },
                          "county": {
                            "type": "string",
                            "nullable": true
                          },
                          "aptNumber": {
                            "type": "string",
                            "nullable": true
                          },
                          "phone": {
                            "type": "string",
                            "nullable": true
                          },
                          "homePhone": {
                            "type": "string",
                            "nullable": true
                          },
                          "workPhone": {
                            "type": "string",
                            "nullable": true
                          },
                          "cellPhone": {
                            "type": "string",
                            "nullable": true
                          },
                          "fax": {
                            "type": "string",
                            "nullable": true
                          },
                          "language": {
                            "type": "string",
                            "nullable": true
                          },
                          "locationType": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "HOME",
                              "ASSISTED_FACILITY",
                              "OTHER",
                              null
                            ]
                          },
                          "residenceType": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "HOME",
                              "SNF",
                              "NF",
                              "ASSISTED_FACILITY",
                              null
                            ]
                          },
                          "residenceName": {
                            "type": "string",
                            "nullable": true
                          },
                          "timezone": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "EST",
                              "CST",
                              "MST",
                              "PST",
                              "AST",
                              "HST",
                              "AK",
                              null
                            ]
                          },
                          "physician": {
                            "type": "string",
                            "nullable": true
                          },
                          "admissionSource": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "NON_HEALTH_CARE_FACILITY",
                              "CLINIC",
                              "HOSPITAL",
                              "SNF",
                              "HEALTH_CARE_FACILITY",
                              "COURT_LAW",
                              "NA",
                              null
                            ]
                          },
                          "insuranceProvider": {
                            "type": "string",
                            "nullable": true
                          },
                          "medicareNumber": {
                            "type": "string",
                            "nullable": true
                          },
                          "medicaidNumber": {
                            "type": "string",
                            "nullable": true
                          },
                          "record": {
                            "type": "string",
                            "enum": [
                              "CAREGIVER",
                              "PATIENT",
                              "OTHER"
                            ]
                          },
                          "stage": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "LEAD",
                              "QUALIFIED",
                              "OPPORTUNITY",
                              "LOST",
                              "WON",
                              null
                            ]
                          },
                          "organizationId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "surgeContactId": {
                            "type": "string",
                            "nullable": true
                          },
                          "representative": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "patientId": {
                                "type": "string"
                              },
                              "firstname": {
                                "type": "string"
                              },
                              "lastname": {
                                "type": "string"
                              },
                              "relationship": {
                                "type": "string",
                                "enum": [
                                  "SPOUSE",
                                  "PARENT",
                                  "CHILD",
                                  "OTHER_FAMILY_MEMBER",
                                  "FRIEND",
                                  "LEGAL_GUARDIAN",
                                  "OTHER"
                                ]
                              },
                              "email": {
                                "type": "string",
                                "nullable": true
                              },
                              "samePatientAddress": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "address": {
                                "type": "string",
                                "nullable": true
                              },
                              "city": {
                                "type": "string",
                                "nullable": true
                              },
                              "state": {
                                "type": "string",
                                "nullable": true
                              },
                              "stateZIP": {
                                "type": "string",
                                "nullable": true
                              },
                              "phone": {
                                "type": "string",
                                "nullable": true
                              },
                              "language": {
                                "type": "string",
                                "nullable": true
                              },
                              "legallyAuthorized": {
                                "type": "boolean"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "patientId",
                              "firstname",
                              "lastname",
                              "relationship",
                              "legallyAuthorized",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "record",
                          "organizationId",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    }
                  },
                  "required": [
                    "patients"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.BAD_REQUEST"
                }
              }
            }
          },
          "401": {
            "description": "Authorization not provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.UNAUTHORIZED"
                }
              }
            }
          },
          "403": {
            "description": "Insufficient access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.FORBIDDEN"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.NOT_FOUND"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error.INTERNAL_SERVER_ERROR"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "inputPrefix":"YOUR_TOKEN"
      }
    },
    "schemas": {
      "block": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/textInput"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Condition",
                  "Validation"
                ]
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "outgoingEdgeId": {
                      "type": "string"
                    },
                    "content": {
                      "type": "object",
                      "properties": {
                        "logicalOperator": {
                          "type": "string",
                          "enum": [
                            "OR",
                            "AND"
                          ]
                        },
                        "comparisons": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "variableId": {
                                "type": "string"
                              },
                              "comparisonOperator": {
                                "type": "string",
                                "enum": [
                                  "Equal to",
                                  "Not equal",
                                  "Contains",
                                  "Does not contain",
                                  "Greater than",
                                  "Less than",
                                  "Is set",
                                  "Is empty",
                                  "Starts with",
                                  "Ends with",
                                  "Matches regex",
                                  "Does not match regex"
                                ]
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            },
            "required": [
              "id",
              "type",
              "items"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Set variable"
                ]
              },
              "options": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "variableId": {
                        "type": "string"
                      },
                      "isExecutedOnClient": {
                        "type": "boolean"
                      },
                      "expressionToEvaluate": {
                        "type": "string"
                      },
                      "isCode": {
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "variableId": {
                        "type": "string"
                      },
                      "isExecutedOnClient": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Now",
                          "Yesterday",
                          "Tomorrow"
                        ]
                      },
                      "timeZone": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "variableId": {
                        "type": "string"
                      },
                      "isExecutedOnClient": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Today",
                          "Moment of the day",
                          "Empty",
                          "Environment name",
                          "User ID",
                          "Result ID",
                          "Random ID",
                          "Phone number",
                          "Contact name"
                        ]
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "variableId": {
                        "type": "string"
                      },
                      "isExecutedOnClient": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Custom"
                        ]
                      },
                      "expressionToEvaluate": {
                        "type": "string"
                      },
                      "isCode": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "variableId": {
                        "type": "string"
                      },
                      "isExecutedOnClient": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Map item with same index"
                        ]
                      },
                      "mapListItemParams": {
                        "type": "object",
                        "properties": {
                          "baseItemVariableId": {
                            "type": "string"
                          },
                          "baseListVariableId": {
                            "type": "string"
                          },
                          "targetListVariableId": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "variableId": {
                        "type": "string"
                      },
                      "isExecutedOnClient": {
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Append value(s)"
                        ]
                      },
                      "item": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  }
                ]
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Workflow link"
                ]
              },
              "options": {
                "type": "object",
                "properties": {
                  "workflowId": {
                    "type": "string"
                  },
                  "groupId": {
                    "type": "string"
                  },
                  "mergeResults": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Wait"
                ]
              },
              "options": {
                "type": "object",
                "properties": {
                  "secondsToWaitFor": {
                    "type": "string"
                  },
                  "shouldPause": {
                    "type": "boolean"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Jump"
                ]
              },
              "options": {
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string"
                  },
                  "blockId": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Email"
                ]
              },
              "options": {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "isCustomBody": {
                    "type": "boolean"
                  },
                  "isBodyCode": {
                    "type": "boolean"
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "subject": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  },
                  "replyTo": {
                    "type": "string"
                  },
                  "cc": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "bcc": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "attachmentsVariableId": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Webhook"
                ],
                "description": "Legacy name for HTTP Request block"
              },
              "options": {
                "type": "object",
                "properties": {
                  "variablesForTest": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "variableId": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "responseVariableMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "variableId": {
                          "type": "string"
                        },
                        "bodyPath": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "isAdvancedConfig": {
                    "type": "boolean"
                  },
                  "isCustomBody": {
                    "type": "boolean"
                  },
                  "isExecutedOnClient": {
                    "type": "boolean"
                  },
                  "webhook": {
                    "type": "object",
                    "properties": {
                      "queryParams": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      },
                      "headers": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "POST",
                          "GET",
                          "PUT",
                          "DELETE",
                          "PATCH",
                          "HEAD",
                          "CONNECT",
                          "OPTIONS",
                          "TRACE"
                        ]
                      },
                      "url": {
                        "type": "string"
                      },
                      "body": {
                        "type": "string"
                      }
                    }
                  },
                  "timeout": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 120
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Google Sheets"
                ]
              },
              "options": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "credentialsId": {
                        "type": "string"
                      },
                      "sheetId": {
                        "type": "string"
                      },
                      "spreadsheetId": {
                        "type": "string"
                      },
                      "action": {
                        "type": "string",
                        "enum": [
                          "Get data from sheet"
                        ]
                      },
                      "filter": {
                        "type": "object",
                        "properties": {
                          "comparisons": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "column": {
                                  "type": "string"
                                },
                                "comparisonOperator": {
                                  "type": "string",
                                  "enum": [
                                    "Equal to",
                                    "Not equal",
                                    "Contains",
                                    "Does not contain",
                                    "Greater than",
                                    "Less than",
                                    "Is set",
                                    "Is empty",
                                    "Starts with",
                                    "Ends with",
                                    "Matches regex",
                                    "Does not match regex"
                                  ]
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "logicalOperator": {
                            "type": "string",
                            "enum": [
                              "OR",
                              "AND"
                            ]
                          }
                        }
                      },
                      "cellsToExtract": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "column": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "variableId": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      },
                      "totalRowsToExtract": {
                        "type": "string",
                        "enum": [
                          "All",
                          "First",
                          "Last",
                          "Random"
                        ]
                      }
                    },
                    "required": [
                      "action"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "credentialsId": {
                        "type": "string"
                      },
                      "sheetId": {
                        "type": "string"
                      },
                      "spreadsheetId": {
                        "type": "string"
                      },
                      "action": {
                        "type": "string",
                        "enum": [
                          "Insert a row"
                        ]
                      },
                      "cellsToInsert": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "column": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      }
                    },
                    "required": [
                      "action"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "credentialsId": {
                        "type": "string"
                      },
                      "sheetId": {
                        "type": "string"
                      },
                      "spreadsheetId": {
                        "type": "string"
                      },
                      "action": {
                        "type": "string",
                        "enum": [
                          "Update a row"
                        ]
                      },
                      "cellsToUpsert": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "column": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      },
                      "filter": {
                        "type": "object",
                        "properties": {
                          "comparisons": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "column": {
                                  "type": "string"
                                },
                                "comparisonOperator": {
                                  "type": "string",
                                  "enum": [
                                    "Equal to",
                                    "Not equal",
                                    "Contains",
                                    "Does not contain",
                                    "Greater than",
                                    "Less than",
                                    "Is set",
                                    "Is empty",
                                    "Starts with",
                                    "Ends with",
                                    "Matches regex",
                                    "Does not match regex"
                                  ]
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "logicalOperator": {
                            "type": "string",
                            "enum": [
                              "OR",
                              "AND"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "action"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "credentialsId": {
                        "type": "string"
                      },
                      "sheetId": {
                        "type": "string"
                      },
                      "spreadsheetId": {
                        "type": "string"
                      }
                    }
                  }
                ]
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Human Review"
                ]
              },
              "options": {
                "type": "object",
                "properties": {
                  "recipients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "email"
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "SMS"
                ]
              },
              "options": {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "isCustomBody": {
                    "type": "boolean"
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "body": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Esign"
                ]
              },
              "options": {
                "type": "object",
                "properties": {
                  "isCustomBody": {
                    "type": "boolean"
                  },
                  "templateId": {
                    "type": "string"
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "body": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Phone Call"
                ]
              },
              "options": {
                "type": "object",
                "properties": {
                  "credentialsId": {
                    "type": "string"
                  },
                  "recipient": {
                    "type": "string"
                  },
                  "objective": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Extract"
                ]
              },
              "blockId": {
                "type": "string"
              },
              "options": {
                "type": "object",
                "properties": {
                  "processorId": {
                    "type": "string"
                  },
                  "responseVariableMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "variableId": {
                          "type": "string"
                        },
                        "bodyPath": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "variableId": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "outgoingEdgeId": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Classify"
                ]
              },
              "blockId": {
                "type": "string"
              },
              "options": {
                "type": "object",
                "properties": {
                  "workflowId": {
                    "type": "string"
                  },
                  "variableId": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "id",
              "type"
            ]
          }
        ],
        "title": "Block"
      },
      "textInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "text input"
            ]
          },
          "options": {
            "type": "object",
            "properties": {
              "labels": {
                "type": "object",
                "properties": {
                  "placeholder": {
                    "type": "string"
                  },
                  "button": {
                    "type": "string"
                  }
                }
              },
              "variableId": {
                "type": "string"
              },
              "isLong": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Text"
      },
      "error.BAD_REQUEST": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Invalid input data"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "BAD_REQUEST"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Error",
        "description": "The error information",
        "example": {
          "code": "BAD_REQUEST",
          "message": "Invalid input data",
          "issues": []
        }
      },
      "error.UNAUTHORIZED": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Authorization not provided"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "UNAUTHORIZED"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Error",
        "description": "The error information",
        "example": {
          "code": "UNAUTHORIZED",
          "message": "Authorization not provided",
          "issues": []
        }
      },
      "error.FORBIDDEN": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Insufficient access"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "FORBIDDEN"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Error",
        "description": "The error information",
        "example": {
          "code": "FORBIDDEN",
          "message": "Insufficient access",
          "issues": []
        }
      },
      "error.NOT_FOUND": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Not found"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "NOT_FOUND"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Error",
        "description": "The error information",
        "example": {
          "code": "NOT_FOUND",
          "message": "Not found",
          "issues": []
        }
      },
      "error.INTERNAL_SERVER_ERROR": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message",
            "example": "Internal server error"
          },
          "code": {
            "type": "string",
            "description": "The error code",
            "example": "INTERNAL_SERVER_ERROR"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            "description": "An array of issues that were responsible for the error",
            "example": []
          }
        },
        "required": [
          "message",
          "code"
        ],
        "title": "Error",
        "description": "The error information",
        "example": {
          "code": "INTERNAL_SERVER_ERROR",
          "message": "Internal server error",
          "issues": []
        }
      },
      "workflowV1": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "default": "1"
          },
          "id": {
            "type": "string"
          },
          "organizationId": {
            "type": "string"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "graphCoordinates": {
                  "type": "object",
                  "properties": {
                    "x": {
                      "type": "number"
                    },
                    "y": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "x",
                    "y"
                  ]
                },
                "blocks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/block"
                  }
                }
              },
              "required": [
                "id",
                "title",
                "graphCoordinates",
                "blocks"
              ]
            }
          },
          "events": {
            "type": "array",
            "maxItems": 1,
            "minItems": 1,
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/event"
                }
              ]
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "from": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "blockId": {
                          "type": "string"
                        },
                        "itemId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "blockId"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "eventId": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "eventId"
                      ]
                    }
                  ]
                },
                "to": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string"
                    },
                    "blockId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "groupId"
                  ]
                }
              },
              "required": [
                "id",
                "from",
                "to"
              ]
            }
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "groupId": {
                  "type": "string"
                },
                "isSessionVariable": {
                  "type": "boolean"
                },
                "value": {
                  "nullable": true,
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  ]
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          }
        },
        "required": [
          "id",
          "organizationId",
          "groups",
          "events",
          "edges",
          "variables"
        ],
        "title": "Workflow V1"
      },
      "event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "outgoingEdgeId": {
            "type": "string"
          },
          "graphCoordinates": {
            "type": "object",
            "properties": {
              "x": {
                "type": "number"
              },
              "y": {
                "type": "number"
              }
            },
            "required": [
              "x",
              "y"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "start"
            ]
          }
        },
        "required": [
          "id",
          "graphCoordinates",
          "type"
        ],
        "description": "Event"
      }
    }
  }
}